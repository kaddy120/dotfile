" .ideavimrc is a configuration file for IdeaVim plugin. It uses
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc

" Source your .vimrc
" source ~/.vimrc
map Q gq

" ideavim plugins
" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins
" Highlight copied text
Plug 'machakann/vim-highlightedyank'
" Commentary plugin
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-surround'
Plug 'preservim/nerdtree'

filetype plugin indent on

"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5
set ignorecase
set smartcase
set multiple-cursors
set clipboard+=unnamed
set relativenumber
set number
set relativenumber
set idearefactormode=keep
set ideajoin
set ideaput
set ideamarks
set showmode
" set NERDTree

" Don't use Ex mode, use Q for formatting.

"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map \r to the Reformat Code action
"map \r <Action>(ReformatCode)

"" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" map leader to space
nmap <space> <Leader>
set relativenumber

" -- reload ideavimrc
" map <leader>rc <cmd>:source ~/.ideavimrc <CR>

" this ensures that copy ensures register is overridden.
" vim.keymap.set("v", "p", '"_dP', opts)

""" Common map
map <leader>b <Action>(ToggleLineBreakpoint)

" --- map jk to <Esc>, which lays under the finder tips.
imap jk <Esc>
imap kj <Esc>
vmap jk <Esc>
vmap kj <Esc>

" -- Keymaps for creating window splits
map <Leader>v <C-w>v
map <Leader>h <C-w>s
map <Leader>cc <C-w>c

" keys to move between splits
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

" scrolling
" -- move half a page up and down, and position a cursor in the middle of the screen
map <C-d> <C-d>zz
map <C-u> <C-u>zz

" -- Switch between tabs.
map <Tab> <Action>(NextTab)
map <S-Tab> <Action>(PreviousTab)

" -- Remap ` to '
nmap "'" '`'
vmap "'" '`'
omap "'" '`'

" -- move a line up and down.
nnoremap <C-j> :m +1<CR>
nnoremap <C-k> :m -2<CR>
inoremap <C-j> <Esc>:m +1<CR>gi
inoremap <C-k> <Esc>:m -2<CR>gi

" system clipboard
vmap <leader>yiw "+yiw
nmap <leader>yiw "+yiw
vmap <leader>y "+y
vmap <leader>d "_d
nmap <leader>y "+yy
nmap <leader>p "+p
nmap <leader>P "+P
vmap <leader>p "+p
vmap <leader>P "+P

map mc <A-n>
map mp <Action>(PasteMultiple)

" formatting
map == <Action>(ReformatCode)
vmap == <Action>(ReformatCode)
map -- <Action>(OptimizeImports)
map -- <Action>(OptimizeImports)

" -- I will use vim-commentary instead.
vmap gcc <Action>(CommentByBlockComment)
" vmap cc <Action>(CommentByLineComment)

" search
map <leader>sg <Action>(FindInPath)
vmap <leader>sg <Action>(FindInPath)
map <leader>su <Action>(FindUsages)
vmap <leader>su <Action>(FindUsages)
map <leader>se <Action>(SearchEverywhere)
map <leader>ss <Action>(FileStructurePopup)


" extract
map <leader>iv <Action>(IntroduceVariable)
map <leader>em <Action>(ExtractMethod)
map <leader>ic <Action>(IntroduceConstant)

" file navigation
map <leader>gh <Action>(Back)
map <leader>gl <Action>(Forward)
map <leader>gj <Action>(MethodDown) <CR>
map <leader>gk <Action>(MethodUp)
map <leader>gs <Action>(GotoSuperMethod)
map <leader>gi <Action>(GotoImplementation)
map <leader>g, <Action>(JumpToLastChange)
map <leader>g. <Action>(JumpToNextChange)
map <leader>gd <Action>(GotoDeclaration)
map <leader>gr <Action>(RecentFiles)
map <leader>gc <Action>(GotoClass)
vmap <leader>gc <Action>(GotoClass)
map <leader>gf <Action>(GotoFile)
vmap <leader>gf <Action>(GotoFile)
map <leader>ga <Action>(GotoAction)
vmap <leader>ga <Action>(GotoAction)
map <leader>ww <Action>(HideAllWindows)
" nnoremap gp :NERDTree <CR>
map <leader>gt <Action>(GotoTest)
map <leader>rc <Action>(RunClass)
map ,rc <Action>(ChooseRunConfiguration)
map <leader>gq <Action>(QuickList)
map <leader>ns <Action>(NewScratchFile)
map <leader>nf <Action>(NewElementSamePlace)
map <leader>ge <Action>(Generate)
vmap <leader>re <Action>(Replace)
map <leader>re <Action>(Replace)
" vmap / <Action>(Find)
" map / <Action>(Find)
map <leader>z <Action>(ToggleDistractionFreeMode)

" terminal shortcuts
map <C-t> <Action>(ActivateTerminalToolWindow)
map <leader>t <Action>(Terminal.OpenInTerminal)

" useful
nnoremap <C-A> gg<S-v>G

" NerdTree
map <C-e> :NERDTree<CR>
map <C-b> :NERDTreeToggle<CR>

map <leader>xx :source ~/.ideavimrc <CR>

" [S]how [S]settings
map <leader>st <Action>(ShowSettings)
" [c]ode [a]ction.
map <leader>ca <Action>(ShowIntentionActions)
" [i]nsert code
map <C-i> <Action>(Generate)
map <C-n> <Action>(NewElement)
map <C-s> <Action>(SaveAll)

" Refactoring
vmap <leader>rm <Action>(ExtractMethod)
map <leader>rm <Action>(ExtractMethod)
map <leader>rv <Action>(IntroduceVariable)
vmap <leader>rv <Action>(IntroduceVariable)
map <leader>rC <Action>(IntroduceConstant)
vmap <leader>rC <Action>(IntroduceConstant)
map <leader>rf <Action>(IntroduceField)
vmap <leader>rf <Action>(IntroduceField)
map <leader>rp <Action>(IntroduceParameter)
vmap <leader>rp <Action>(IntroduceParameter)
map <leader>rin <Action>(Inline)
map <leader>rn <Action>(RenameElement)